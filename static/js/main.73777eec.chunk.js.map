{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","renderedGoods","goods","visibleGoods","ALPHABET","sort","firstGood","secondGood","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","style","justifyContent","type","cn","onClick","currentValue","map","good","textAlign","listStyle","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAlCR,SACEC,EADF,GAGG,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAY,YAAOD,GAEzB,OAAQH,GACN,KAAKP,EAASY,SACZD,EAAaE,MAAK,SAACC,EAAWC,GAAZ,OAChBD,EAAUE,cAAcD,MAG1B,MAEF,KAAKf,EAASiB,OACZN,EAAaE,MAAK,SAACC,EAAWC,GAAZ,OAChBD,EAAUI,OAASH,EAAWG,UAIlC,KAAKlB,EAASM,MAIhB,OAAIF,EACKO,EAAaQ,UAGfR,EAMeS,CACpBnB,EAAiB,CAAEM,WAAUH,eAO/B,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAUC,MAAO,CAAEC,eAAgB,UAAlD,UACE,wBACEC,KAAK,SACLH,UAAWI,IACT,iBACA,CAAE,WAAYlB,IAAaP,EAASY,WAEtCc,QAAS,kBAAMlB,EAAYR,EAASY,WANtC,iCAWA,wBACEY,KAAK,SACLH,UAAWI,IACT,oBACA,CAAE,WAAYlB,IAAaP,EAASiB,SAEtCS,QAAS,kBAAMlB,EAAYR,EAASiB,SANtC,4BAWA,wBACEO,KAAK,SACLH,UAAWI,IACT,oBACA,CAAE,YAAarB,IAEjBsB,QAAS,kBAAMrB,GAAc,SAAAsB,GAAY,OAAKA,MANhD,sBAWGvB,GAAcG,IAAaP,EAASM,OACrC,wBACEkB,KAAK,SACLH,UAAU,4BACVK,QA7CI,WACZrB,GAAc,GACdG,EAAYR,EAASM,OAwCf,sBAUJ,6BACGG,EAAcmB,KAAI,SAACC,GAAD,OACjB,oBAEE,UAAQ,OACRP,MAAO,CAAEQ,UAAW,SAAUC,UAAW,QAH3C,SAKGF,GAJIA,YCtHjBG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.73777eec.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((firstGood, secondGood) => (\n        firstGood.localeCompare(secondGood)\n      ));\n\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((firstGood, secondGood) => (\n        firstGood.length - secondGood.length));\n\n      break;\n\n    case SortType.NONE:\n    default: break;\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const renderedGoods = getReorderedGoods(\n    goodsFromServer, { sortType, isReversed },\n  );\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\" style={{ justifyContent: 'center' }}>\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(currentValue => !currentValue)}\n        >\n          Reverse\n        </button>\n\n        { (isReversed || sortType !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {renderedGoods.map((good) => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n            style={{ textAlign: 'center', listStyle: 'none' }}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}